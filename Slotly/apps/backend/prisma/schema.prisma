generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  email            String   @unique
  password         String
  name             String
  role             Role     @default(CUSTOMER)
  phone            String?
  createdAt        DateTime @default(now())
  suspended        Boolean  @default(false)
  suspendedUntil   DateTime?
  burned           Boolean  @default(false)
}

model Business {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String   @unique
  description    String?
  ownerId        String
  createdAt      DateTime @default(now())
  logoUrl        String?
  suspended      Boolean  @default(false)
  suspendedUntil DateTime?
}

model Service {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  price      Int
  duration   Int
  category   String?
  available  Boolean  @default(true)
  businessId String
  createdAt  DateTime @default(now())
}

model Booking {
  id                          String        @id @default(auto()) @map("_id") @db.ObjectId
  userId                      String
  staffId                     String?
  serviceId                   String
  businessId                  String
  startTime                   DateTime
  endTime                     DateTime
  status                      BookingStatus @default(PENDING)
  createdAt                   DateTime      @default(now())
  cancellationDeadlineMinutes Int           @default(120)
  lateCancellationFee         Int           @default(5000)
}

model Payment {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  bookingId String        @unique
  amount    Int
  method    PaymentMethod
  status    PaymentStatus
  fee       Int
  createdAt DateTime      @default(now())
}

model Subscription {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  businessId String           @unique
  plan       SubscriptionPlan
  startDate  DateTime
  endDate    DateTime
  isActive   Boolean          @default(true)
}

model Reminder {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  bookingId String         @unique
  sendAt    DateTime
  sent      Boolean        @default(false)
  method    ReminderMethod
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  businessId String
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  flagged    Boolean  @default(false)
}

model Coupon {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  code            String   @unique
  description     String?
  discount        Int
  isPercentage    Boolean  @default(false)
  expiresAt       DateTime
  createdAt       DateTime @default(now())
  createdByAdmin  Boolean  @default(false)
  usageLimit      Int      @default(1)
  timesUsed       Int      @default(0)
  minimumSpend    Int?
  businessId      String
}

model UserCoupon {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  couponId  String
  usedAt    DateTime?
}

model Referral {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  referrerId     String
  referredUserId String   @unique
  createdAt      DateTime @default(now())
  rewardIssued   Boolean  @default(false)
}

model Notification {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  type      NotificationType
  title     String
  message   String
  read      Boolean          @default(false)
  createdAt DateTime         @default(now())
}

model Availability {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  staffId   String
  startTime DateTime
  endTime   DateTime
  createdAt DateTime @default(now())
}

model TimeOffRequest {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  staffId     String
  reason      String?
  startDate   DateTime
  endDate     DateTime
  status      TimeOffStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  reviewedAt  DateTime?
}

model AdCampaign {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  businessId String
  title      String
  budget     Int
  startDate  DateTime
  endDate    DateTime
  isActive   Boolean  @default(true)
}

model ServiceImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  serviceId String
  createdAt DateTime @default(now())
}

model BusinessVerification {
  id              String             @id @default(auto()) @map("_id") @db.ObjectId
  businessId      String             @unique
  type            String
  idNumber        String
  licenseUrl      String?
  regNumber       String?
  idPhotoUrl      String
  selfieWithIdUrl String?
  status          VerificationStatus @default(PENDING)
  reviewedAt      DateTime?
  createdAt       DateTime           @default(now())
}

model StaffEnrollment {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  userId          String
  businessId      String
  idNumber        String
  idPhotoUrl      String
  selfieWithIdUrl String
  status          EnrollmentStatus @default(PENDING)
  submittedAt     DateTime         @default(now())
  reviewedAt      DateTime?
}

model ServiceBundle {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Int
  duration    Int
  businessId  String
  createdAt   DateTime @default(now())
}

model ServiceInBundle {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  bundleId  String
  serviceId String
  position  Int
}

model MonthlyReport {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  businessId String
  period     String
  fileUrl    String
  createdAt  DateTime @default(now())
}

model SuspensionLog {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String?
  businessId String?
  adminId    String
  reason     String?
  action     String
  timestamp  DateTime @default(now())
}

enum TimeOffStatus {
  PENDING
  APPROVED
  REJECTED
}

enum NotificationType {
  BOOKING
  PAYMENT
  COUPON
  APPLICATION
  TIME_OFF
  STAFF_ASSIGNMENT
  SYSTEM
  REVIEW
  SUBSCRIPTION
  REFERRAL
}

enum Role {
  ADMIN
  BUSINESS_OWNER
  STAFF
  CUSTOMER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
  RESCHEDULED
}

enum PaymentMethod {
  MPESA
  AIRTEL_MONEY
  CARD
  OTHER
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
  REFUNDED
}

enum SubscriptionPlan {
  BASIC
  STANDARD
  PREMIUM
}

enum ReminderMethod {
  EMAIL
  SMS
  PUSH
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum EnrollmentStatus {
  PENDING
  APPROVED
  REJECTED
}
